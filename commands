kubectl apply -f pod.yml or kubectl create -f pod.yml  # to create the pod
kubectl delete relicaset name-of-replica    # to delete any service like replicaset
kubectl replace -f replicaset.yml   # to update replicaset from n numbers to n+2 ex from 2 to 4 or 4 to 6

kubectl scale -replicas=6 -f replicaset.yml.   to update the same but it will not effect the configuration written in file.
kubectl edit rs new-replica-set  #this is being used to edit any replica-set configuration without knowing the filename.

kubectl run nginx --image=nginx --dry-run=client -o yaml. # this command will create a yaml file for that specific pod.

kubectl create deployment --image=nginx nginx --dry-run=client -o yaml   # this is used to create yml file for deployment named nginx

kubectl get pods --all-namespaces.   # to list all pods of all namespaces


kubectl config set-context $(kubectl config current-context) --namespace=dev. # to make dev as default namespace
 
 #ResourceQuota type in pod-definition file can be used to limit memory and cpu limit to a specific namespace.
 
 kubectl set image deployment nginx nginx=nginx:1.18 # this is used to update the image in running deployment
 
 kubectl create service clusterip redis --tcp=6379:6379  #to create service file 
 
 kubectl expose pod nginx --type=NodePort --port=80 --name=nginx-service --dry-run=client -o yaml. # to create a service that expose nginx pod
 
 kubectl get pods --selector env=dev. # this is used to get pod where env is dev and it is defined in selector
 
 Taints Node: This is used to set which pod should go to which node
  kubectl taint nodes node-name key=value:taint-effect
  ex: kubectl taint node node1 app=blue:NoSchedule
  # To remove the taint use the same command just put "-" at the end which will untaint
  
  kubectl label nodes nodes1 size=large #this command labels your node so that when you configure nodeselector in pod you can use the same label.
 
 kubectl get deamonsets -A. # to get all daemonsets of namespace
 
 kubectl rollout status deployment/app-deployment #this command is used to check status when we use apply command to do some changes.
 
 kubectl rollout undo deployment/my-deployment. # it will revert the changes done by kubectl commands and back to previous deployment configuration.
 
 kubectl set image deployment frontend simple-webapp=color:v2 # this command is used to update image on deployment named frontend where simple-webapp is name of container
 
 kubectl create secret generic secret-name --from-literal=DB_Host=Mysql   # to create secret for kubernetes
 
 kubectl drain node-1 #to mmark node as maintainance, empty the node and mark it unschedulable.
 kubectl uncordon node-1. # to mark node schedulable after maintaninace.
 kubectl cordon node-2 # this command is to make sure new pods shoult not be scheduled in that nodes but it does not move pod to another node.
 
 kubectl get all --all-namespaces -o yaml > all-deploy-services.yaml #this is the command to store all yaml as backup from apiserver 
 etcdctl snapshot save snapshot.db # this command is used to backup all store in ETCD
 

